/**
 * USDA Report API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.macromacro.usda

import org.openapitools.server.model.{ IncompleteNamedMacros, NamedMacros }

case class FoodFood(
  // report type
  `type`: String,
  // Release version of the data being reported
  sr: String,
  // metadata elements for the food being reported
  desc: Desc,
  // ingredients (Branded Food Products report only)
  ing: Option[FoodFoodIng] = None,
  // metadata elements for each nutrient included in the food report
  nutrients: List[Nutrients]) {

  val ndbno = desc.ndbno
  val uid = s"ndbno::v1::$ndbno"
  val name = desc.name

  private def findNutrient(nutrientId: String) = {
    // there will only ever be one for a given nutrientId
    nutrients.filter(_.nutrient_id == nutrientId).lift(0)
  }

  val fat = findNutrient(Nutrients.FAT_ID).map(_.value).map(BigDecimal(_))
  val carbs = findNutrient(Nutrients.CARB_ID).map(_.value).map(BigDecimal(_))
  val protein = findNutrient(Nutrients.PROTEIN_ID).map(_.value).map(BigDecimal(_))
  val calories = findNutrient(Nutrients.CALORIES_ID).map(_.value).map(BigDecimal(_))
  val unit = desc.ru

  def toNamedMacros: Either[IncompleteNamedMacros, NamedMacros] = {
    // TODO sometimes, branded foods are missing nutrients.  How to handle?
    IncompleteNamedMacros(uid, name, fat, carbs, protein, calories, Nutrients.DEFAULT_AMOUNT, unit).toComplete
  }

  def hasCompleteMacros = {
    toNamedMacros.isRight
  }
}
