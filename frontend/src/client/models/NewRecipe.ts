// tslint:disable
/**
 * Macro Macro API
 * An API that provides access to recipe and ingredient information, both user-generated and sourced from the USDA
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AmountOfIngredient,
    AmountOfIngredientFromJSON,
    AmountOfIngredientFromJSONTyped,
    AmountOfIngredientToJSON,
} from './';

/**
 * 
 * @export
 * @interface NewRecipe
 */
export interface NewRecipe {
    /**
     * 
     * @type {string}
     * @memberof NewRecipe
     */
    name: string;
    /**
     * 
     * @type {Array<AmountOfIngredient>}
     * @memberof NewRecipe
     */
    foods: Array<AmountOfIngredient>;
    /**
     * 
     * @type {number}
     * @memberof NewRecipe
     */
    amount: number;
    /**
     * 
     * @type {number}
     * @memberof NewRecipe
     */
    portionSize: number;
    /**
     * 
     * @type {string}
     * @memberof NewRecipe
     */
    unit: string;
}

export function NewRecipeFromJSON(json: any): NewRecipe {
    return NewRecipeFromJSONTyped(json, false);
}

export function NewRecipeFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewRecipe {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'foods': (json['foods'] as Array<any>).map(AmountOfIngredientFromJSON),
        'amount': json['amount'],
        'portionSize': json['portionSize'],
        'unit': json['unit'],
    };
}

export function NewRecipeToJSON(value?: NewRecipe): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'foods': (value.foods as Array<any>).map(AmountOfIngredientToJSON),
        'amount': value.amount,
        'portionSize': value.portionSize,
        'unit': value.unit,
    };
}


