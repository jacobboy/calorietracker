// tslint:disable
/**
 * USDA Report API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists } from '../runtime';
/**
 * metadata elements for the food being reported
 * @export
 * @interface Desc
 */
export interface Desc {
    /**
     * NDB food number
     * @type {string}
     * @memberof Desc
     */
    ndbno: string;
    /**
     * food name
     * @type {string}
     * @memberof Desc
     */
    name: string;
    /**
     * short description
     * @type {object}
     * @memberof Desc
     */
    sd?: object;
    /**
     * food group
     * @type {object}
     * @memberof Desc
     */
    group?: object;
    /**
     * scientific name
     * @type {object}
     * @memberof Desc
     */
    sn?: object;
    /**
     * commercial name
     * @type {object}
     * @memberof Desc
     */
    cn?: object;
    /**
     * manufacturer
     * @type {string}
     * @memberof Desc
     */
    manu?: string;
    /**
     * nitrogen to protein conversion factor
     * @type {object}
     * @memberof Desc
     */
    nf?: object;
    /**
     * carbohydrate factor
     * @type {object}
     * @memberof Desc
     */
    cf?: object;
    /**
     * fat factor
     * @type {object}
     * @memberof Desc
     */
    ff?: object;
    /**
     * protein factor
     * @type {object}
     * @memberof Desc
     */
    pf?: object;
    /**
     * refuse %
     * @type {object}
     * @memberof Desc
     */
    r?: object;
    /**
     * refuse description
     * @type {object}
     * @memberof Desc
     */
    rd?: object;
    /**
     * database source: \'Branded Food Products\' or \'Standard Reference\' 
     * @type {string}
     * @memberof Desc
     */
    ds: DescDsEnum;
    /**
     * reporting unit: nutrient values are reported in this unit, usually gram (g) or milliliter (ml) 
     * @type {string}
     * @memberof Desc
     */
    ru: string;
}

export function DescFromJSON(json: any): Desc {
    return {
        'ndbno': json['ndbno'],
        'name': json['name'],
        'sd': !exists(json, 'sd') ? undefined : json['sd'],
        'group': !exists(json, 'group') ? undefined : json['group'],
        'sn': !exists(json, 'sn') ? undefined : json['sn'],
        'cn': !exists(json, 'cn') ? undefined : json['cn'],
        'manu': !exists(json, 'manu') ? undefined : json['manu'],
        'nf': !exists(json, 'nf') ? undefined : json['nf'],
        'cf': !exists(json, 'cf') ? undefined : json['cf'],
        'ff': !exists(json, 'ff') ? undefined : json['ff'],
        'pf': !exists(json, 'pf') ? undefined : json['pf'],
        'r': !exists(json, 'r') ? undefined : json['r'],
        'rd': !exists(json, 'rd') ? undefined : json['rd'],
        'ds': json['ds'],
        'ru': json['ru'],
    };
}

export function DescToJSON(value?: Desc): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'ndbno': value.ndbno,
        'name': value.name,
        'sd': value.sd,
        'group': value.group,
        'sn': value.sn,
        'cn': value.cn,
        'manu': value.manu,
        'nf': value.nf,
        'cf': value.cf,
        'ff': value.ff,
        'pf': value.pf,
        'r': value.r,
        'rd': value.rd,
        'ds': value.ds,
        'ru': value.ru,
    };
}

/**
* @export
* @enum {string}
*/
export enum DescDsEnum {
    BrandedFoodProducts = 'Branded Food Products',
    StandardReference = 'Standard Reference'
}


