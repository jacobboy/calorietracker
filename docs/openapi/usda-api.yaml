openapi: "3.0.2"
info:
  title: USDA Report API
  version: 2
  # description: An API that provides access to recipe and ingredient information, both user-generated and sourced from the USDA
  # termsOfService: http://swagger.io/terms/
  # contact:
  #   name: Swagger API Team
  #   email: apiteam@swagger.io
  #   url: http://swagger.io
  # license:
  #   name: Apache 2.0
  #   url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://api.nal.usda.gov/ndb/
paths:
  /search:
    get:
      description: |
        A search request sends keyword queries and returns lists of foods
        which contain one or more of the keywords in the food description,
        scientific name, or commerical name fields. Search requests are a
        good way to locate NDB numbers (NDBno) for the reports API as well
        as for general discovery.
      operationId: search
      parameters:
        - name: api_key
          in: query
          description: Must be a data.gov registered API key
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: Search terms
          required: true
          schema:
            type: string
        - name: ds
          in: query
          description: Data source. Must be either 'Branded Food Products' or 'Standard Reference'
          required: false
          schema:
            type: string
            enum: ['Branded Food Products', 'Standard Reference']
        - name: fg
          in: query
          description: Food group ID
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Sort the results by food name (n) or by search relevance (r). Default 'r'.
          required: false
          schema:
            type: string
            enum: ['n', 'r']
        - name: max
          in: query
          description: maximum rows to return. Default 50.
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: beginning row in the result set to begin. Default 0.
          required: false
          schema:
            type: integer
            format: int32
        - name: format
          in: query
          description: >
            json or xml. default JSON.
            Format can also be sent in the request header: Content-Type: application/json or Content-Type:application/xml.
          required: false
          schema:
            type: string
            enum: ['json', 'xml']
      responses:
        '200':
          description: Search response
          content:
            application/json:
              schema:
                $ref: SearchResponse
                # ...usda doesn't 400 actually, just a search that _says_ 400
                #    unfortunately, it looks like ATM the client generator doesn't handle oneoF
                # oneOf:
                #   - $ref: SearchResponse
                #   - $ref: ErrorResponse
        '400':
          description: Search error
          content:
            application/json:
              schema:
                $ref: ErrorResponse

  /V2/reports:
    get:
      description: Get a food report
      operationId: reports
      parameters:
        - name: api_key
          in: query
          description: Must be a data.gov registered API key
          required: true
          schema:
            type: string
        - name: ndbno
          in: query
          description: A list of up to 25 NDB numbers
          required: true
          schema:
            type: array
            items:
              type: string
        - name: type
          in: query
          description: "Report type: [b]asic or [f]ull or [s]tats. Default: basic"
          required: false
          schema:
            type: string
            enum: ['b', 'f', 's']
        - name: format
          in: query
          description: "Report format: xml or json"
          required: false
          schema:
            type: string
            enum: ['xml', 'json']
      responses:
        '200':
          description: Food reports
          content:
            application/json:
              schema:
                $ref: FoodReport

components:
  schemas:
    SearchResponse:
      description: |
        A search response consists of information about the results of the search such as the
        total hits matching the query and the starting and ending points in the results list,
        followed by a list of foods. Metadata for each food in the returned list includes the
        food's description (name) and NDBno.
      type: object
      properties:
        list:
          $ref: '#/components/schemas/SearchList'
      required:
        - list

    SearchList:
      type: object
      properties:
        q:
          description: terms requested and used in the search
          type: string
        sr:
          description: Standard Release version of the data being reported
          type: string
        ds:
          description: undocumented. has returned "GDSN", "LI",
          type: string
        start:
          description: beginning item in the list
          type: integer
          format: int32
        end:
          description: last item in the list
          type: integer
          format: int32
        total:
          description: >
            total # of items returned by the search
          type: integer
          format: int32
        group:
          description: food group to which the food belongs.  e.g. "Branded Food Products Database", "Baked Products"
          type: string
        sort:
          description: requested sort order (r=relevance or n=name)
          type: string
          enum: ['r', 'n']
        item:
          description: individual items on the list
          type: array
          items:
            $ref: '#/components/schemas/SearchItem'
      required:
        - q
        - sr
        - ds
        - start
        - end
        - total
        - group
        - sort
        - item

    SearchItem:
      description: individual item in a response to a search
      type: object
      properties:
        ndbno:
          description: the food’s NDB Number
          type: string
        name:
          description: the food’s name
          type: string
        offset:
          description: beginning offset into the results list for the items in the list requested
          type: integer
          format: int32
        group:
          description: food group to which the food belongs
          type: string
        ds:
          description: >
            Data source: BL=Branded Food Products or SR=Standard Release
          type: string
        manu:
          description: The foods manufacturer
          type: string
      required:
        - ndbno
        - name
        - offset
        - group
        - ds
        - manu

    FoodReport:
      properties:
        foods:
          description: the list of foods reported for a request
          type: array
          items:
            $ref: '#/components/schemas/Food'
        count:
          description: Number of foods requested and processed
          type: number
        notfound:
          description: Number of requested foods not found in the database
          type: number
        api:
          description: API Version
          type: number
      required:
        - foods
        - count
        - notfound
        - api

    Food:
      description: the food report
      type: object
      properties:
        food:
          type: object
          properties:
            type:
              description: report type
              type: string
            sr:
              description: Release version of the data being reported
              type: string
            desc:
              description: metadata elements for the food being reported
              $ref: '#/components/schema/Desc'
            ing:
              description: ingredients (Branded Food Products report only)
              type: object
              properties:
                desc:
                  description: list of ingredients
                  type: string
                upd:
                  description: date ingredients were last updated by company
                  type: string
              required:
                - desc
                - upd
            nutrients:
              description: metadata elements for each nutrient included in the food report
              type: array
              items:
                $ref: '#/components/schemas/Nutrients'
          required:
            - sr
            - type
            - desc
            - nutrients
      required:
        - food

    Nutrients:
      description: metadata elements for each nutrient included in the food report
      type: object
      properties:
        nutrient_id:
          description: nutrient number (nutrient_no) for the nutrient
          type: string
        name:
          description: nutrient name
          type: string
        # sourcecode:
        #   description: >
        #     list of source id's in the sources list referenced for this nutrient
        #   type: array
        #   items:
        #     type: string
        derivation:
          description: Indicator of how the value was derived
          type: string
        unit:
          description: unit of measure for this nutrient
          type: string
        value:
          description: 100 g equivalent value of the nutrient
          type: string
        dp:
          description: "# of data points"
          type: string
        se:
          description: standard error
          type: string
        measures:
          description: list of measures reported for a nutrient
          type: array
          items:
            $ref: '#/components/schemas/NutrientsMeasures'
      required:
        - nutrient_id
        - name
        - derivation
        - group
        - unit
        - value
        - measures

    NutrientsMeasures:
      description: list of measures reported for a nutrient
      type: object
      properties:
        label:
          description: name of the measure, e.g. "large"
          type: string
        eqv:
          description: equivalent of the measure expressed as an eunit
          type: integer
          format: int32
        eunit:
          description: >
            Unit in with the equivalent amount is expressed.
            Usually either gram (g) or milliliter (ml)
          type: string
        value:
          description: gram equivalent value of the measure
          type: string
        qty:
          description: Dunno, not in the docs
          type: integer
          format: int32
      required:
        - label
        - eqv
        - eunit
        - value

    Desc:
      description: metadata elements for the food being reported
      type: object
      properties:
        ndbno:
          description: NDB food number
          type: string
        name:
          description: food name
          type: string
        sd:
          description: short description
        group:
          description: food group
        sn:
          description: scientific name
        cn:
          description: commercial name
        manu:
          description: manufacturer
          type: string
        nf:
          description: nitrogen to protein conversion factor
        cf:
          description: carbohydrate factor
        ff:
          description: fat factor
        pf:
          description: protein factor
        r:
          description: refuse %
        rd:
          description: refuse description
        ds:
          description: >
            database source: 'Branded Food Products' or 'Standard Reference'
          type: string
          enum: ['Branded Food Products', 'Standard Reference']
        ru:
          description: >
            reporting unit: nutrient values are reported in this unit,
            usually gram (g) or milliliter (ml)
          type: string
      required:
        - ndbno
        - name
        - ds
        - ru

    ErrorResponse:
      type: object
      properties:
        errors:
          type: object
          properties:
            error:
              type: array
              items:
                $ref: '#/components/schemas/ErrorItem'
          required:
            - error
      required:
        - error

    ErrorItem:
      type: object
      properties:
        status:
          type: integer
        parameter:
          type: string
        message:
          type: string
      required:
        - status
          parameter
          message