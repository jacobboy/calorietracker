openapi: "3.0.2"
info:
  title: FDC Food Database API
  version: 1
  # description: An API that provides access to recipe and ingredient information, both user-generated and sourced from the USDA
  # termsOfService: http://swagger.io/terms/
  # contact:
  #   name: Swagger API Team
  #   email: apiteam@swagger.io
  #   url: http://swagger.io
  # license:
  #   name: Apache 2.0
  #   url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://api.nal.usda.gov/fdc/v1/
paths:
  /search:
    post:
      description: |
        The Food Search endpoint lists foods that match desired search criteria. Search operators are supported.
        The Food Search endpoint requires at least one request parameter using POST request.
      operationId: search
      parameters:
        - name: api_key
          in: query
          description: Required. Must be a data.gov registered API key.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchBody'
      responses:
        '200':
          description: Search response
          content:
            application/json:
              schema:
                $ref: SearchResponse
        '400':
          description: Search error
          content:
            application/json:
              schema:
                $ref: ErrorResponse

  /{fdcId}:
    get:
      description: Get a food report
      operationId: report
      parameters:
        - name: api_key
          in: query
          description: Required. Must be a data.gov registered API key.
          required: true
          schema:
            type: string
        - name: fdcId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Food reports
          content:
            application/json:
              schema:
                $ref: FoodReport
        '400':
          description: Search error
          content:
            application/json:
              schema:
                $ref: ErrorResponse

components:
  schemas:
    SearchBody:
      type: object
      properties:
        generalSearchInput:
          description: Search query (general text).
          type: string
        includeDataTypes:  # TODO looks like this is deprecated in favor of includeDataTypesList
          description: Specific data types to include in search.
          type: object
          properties:
            "Survey (FNDDS)":
              type: boolean
            Foundation:
              type: boolean
            Branded:
              type: boolean
        ingredients:
          description: The list of ingredients (as it appears on the product label).
          type: string
        brandOwner:
          description: Brand owner for the food.
          type: string
        requireAllWords:
          description: |
            When true, the search will only return foods that contain all
            of the words that were entered in the search field.
          type: string
          enum: ["true", "false"]
        pageNumber:
          description: The page of results to return.
          type: string
        sortField:
          description: |
            The name of the field by which to sort.
            Possible sorting options: lowercaseDescription.keyword, dataType.keyword, publishedDate, fdcId.
          type: string
          enum: [
            "lowercaseDescription.keyword",
            "dataType.keyword",
            "publishedDate",
            "fdcId"
          ]
        sortDirection:
          description: The direction of the sorting, either "asc" or "desc".
          type: string
          enum: ["asc", "desc"]

    SearchResponse:
      type: object
      properties:
        foodSearchCriteria:
          type: object
          properties:
            foodSearchCriteria:  # todo
              type: object
            totalHits:
              type: integer
            currentPage:
              type: integer
            totalPages:
              type: integer
          foods:
            type: list
            items:
              type: object
              properties:
                fdcId:
                  type: integer
                description:
                  type: string
                scientificName:
                  description: The scientific name of the food.
                  type: string
                commonNames:
                  description: Any other common names for the food.
                  type: string
                additionalDescriptions:
                  description: Any additional descriptions of the food.
                  type: object
                dataType:
                  description: The type of the food data
                  type: string
                  enum: ["Survey (FNDDS)", "Branded", "Foundation"]
                foodCode:
                  description: A unique ID identifying the food within FNDDS.
                  type: string
                gtinUpc:
                  description: GTIN or UPC code identifying the food.
                  type: string
                ndbNumber:
                  description: Unique number assigned for foundation foods.
                  type: string
                publishedDate:
                  description: Date the item was published to FDC.
                  type: string
                brandOwner:
                  description: Brand owner for the food.
                  type: string
                ingredients:
                  description: The list of ingredients (as it appears on the product label).
                  type: string
                allHighlightFields:
                  description: Fields that were found matching the criteria.
                  type: string
                score:
                  description: Relative score indicating how well the food matches the search criteria.
                  type: number
              required:
                - fdcId
                - description
                - dataType
                - gtinUpc
                - publishedDate
                - allHighlightFields
                - score
      required:
        - foodSearchCriteria
        - totalHits
        - currentPage
        - totalPages
        - foods

    FoodReport:  # TODO actually can assemble the base food type and subtypes
      type: object
      properties:
        fdcId:
          type: integer
        dataType:
          type: string
        description:
          description: TODO
          type: string
        # foodGroup:  ? docs say it exists, idk
        publicationDate:
          type: string
        scientificName:
          type: string
        foodKey:
          type: string
        foodNutrients:
          description: TODO
          type: array
          items:
            $ref: '#/components/schema/FoodNutrientItem'
        foodPortions:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              fdcId:
                type: integer
              amount:
                type: number
              measureUnit:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  abbreviation:
                    type: string
                required:
                  - id
                  - name
                  - abbreviation
              portionDescription:
                type: string
              modifier:
                type: string
              gramWeight:
                type: string
              dataPoints:
                type: integer
              footnote:
                type: string
              minYearAcquired:
                type: integer
              sequenceNumber:
                type: integer
            required:
              - id
              - measureUnit
              - gramWeight
              - sequenceNumber

      required:
        - fdcId
        - dataType
        - description
        - publicationDate
        - foodNutrients

      #   foodComponents:
      #     type: array
      #     items:
      #       type: object
      #       properties:
      #         id:
      #           type: integer
      #         fdcId:
      #           type: integer
      #         name:
      #           type: string
      #         pctWeight:
      #           type: number
      #         isRefuse:
      #           enum: ["Y", "N"]
      #         gramWeight:
      #           type: number
      #         dataPoints:
      #           type: number
      #         min_year_acquired:
      #           type: string
      #   foodAttributes:
      #     type: array
      #     items:
      #       type: object # TODO
      #   tableAliasName:
      #     type: string
      #   brandOwner:
      #     type: string
      #   gtinUpc:
      #     type: string
      #   foodCode:
      #     type: string
      #   startDate:
      #     type: string
      #   endDate:
      #     type: string
      #   wweiaFoodCategory:
      #     type: object
      #     properties:
      #       wweiaFoodCategoryCode:
      #         type: integer
      #       wweiaFoodCategoryDescription:
      #         type: string
      #   inputFoods:
      #     type: array
      #     items:
      #       type: object
      #       properties:
      #         id:
      #           type: integer
      #         unit:
      #           type: string
      #         portionDescription:
      #           type: string
      #         portionCode:
      #           type: string
      #         srCode:
      #           type: integer
      #         srDescription:
      #           type: string
      #         foodDescription:
      #           type: string
      #         gramWeight:
      #           type: number
      #         surveyFlag:
      #           type: integer
      #         amount:
      #           type: number
      #         sequenceNumber:
      #           type: integer
      #   changes:
      #     type: string
      # required:
      #   # TODO
      #   - fdcId
      #   - foodNutrients

    FoodNutrientItem:
      type: object
      properties:
        type:
          type: string
        id:
          type: integer
        fdcId:
          type: integer
        nutrient:
          $ref: '#/components/schema/Nutrient'
        amount:
          type: number
        dataPoints:
          type: integer
        foodNutrientDerivation:
          type: object
          properties:
            id:
              type: integer
            code:
              type: string
            description:
              type: string
            foodNutrientSource:
              type: object
              properties:
                id:
                  type: integer
                code:
                  type: string
                description:
                  type: string
        standardError:
          type: number
        min:
          type: number
        max:
          type: number
        median:
          type: number
        footnote:
          type: string
        min_year_acquired:
          type: integer
        # nutrientAnalysisDetails:
        #   type: array
        #   items:
        #     type: object
      required:
        - id
        - nutrient
        - amount

    Nutrient:
      type: object
      properties:
        id:
          type: integer
        number:
          type: string
        name:
          type: string
        rank:
          type: integer
        unitName:
          type: string  # TODO enum?
      required:
        - id
        - number
        - name
        - rank
        - unitName

    ErrorResponse:
      type: object
      properties:
        errors:
          type: object
          properties:
            timestamp:
              type: string
            status:
              type: integer
            error:
              type: string
            message:
              type: string
            path:
              type: string
          required:
            - error
      required:
        - error
